1. Build instructions
You will need the general preconditions for building OpenCPN from:
https://opencpn.org/wiki/dokuwiki/doku.php?id=opencpn:developer_manual:developer_guide
Setup your OS specific build environment according to these instructions and build OpenCPN.
To build the plugin oeSENC_pi outside OpenCPN: The presumption is Opencpn is built in .../Builds/Opencpn

    A.  Windows

    i.      Open the "x86 Native Tools Command Prompt for VS 2017", and navigate to the Builds directory e.g. C:\Builds\
    ii.     Clone the oeSENC_pi source code: git clone https://github.com/bdbcat/oesenc_pi.git
    iii.    CD into the new directory C:\Builds\oesenc_pi\ and create a new directory \build\ "mkdir build"
    iv.     Find a compatible copy of opencpn.lib (typically from the most recent OpenCPN Release build),
            and copy it into the \build\ directory.
    v.      CD into the \build\ directory and enter: (Mind the dots!)
            cmake -T v141_xp ..
    vi.     Open the oesenc_pi.sln in VS2017 to build for Release and make a package or build by cmake from the command line:
            cmake --build .
            Build release version from the command line
            cmake --build . --config release
            Build setup package from the command line
            cmake --build . --config release --target package

    The Windows install package will be built, and called oesenc_pi-X.X.xxxx-ov50-win32.exe


    B. Linux

    i.      git clone the project. (See the Windows example above @ ii.)
            cd into /oesenc_pi/ and "mkdir build". cd build.
            Now if you want to build and install your local build:  (Mind the dots!)
    ii.     $(sudo) cmake -DPREFIX=/usr/local ..
    iii.    $sudo make && sudo make install
    iv.     In case you want to build a package:
            $sudo make package

    The debian install package will be built, and called oesenc_pi_X.X.xxxx-x_YYY.deb

